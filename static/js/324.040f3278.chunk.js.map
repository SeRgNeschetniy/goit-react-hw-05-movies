{"version":3,"file":"static/js/324.040f3278.chunk.js","mappings":"0NAEaA,EAAaC,EAAAA,GAAAA,GAAH,8DAKVC,EAAYD,EAAAA,GAAAA,GAAH,wf,SCHTE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MACXC,EAAWH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAC1B,SAACT,EAAD,WACE,UAAC,KAAD,CAAMU,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMT,GAA1C,WACE,gBACEU,IACEJ,EAAW,0CAC4BA,GACnCK,EAENC,IAAKP,KAEP,uBAAIA,QAVQD,EADU,IAgB5B,OAAO,SAACT,EAAD,UAAaO,GACrB,C,oJCpBYW,EAAUjB,EAAAA,GAAAA,IAAH,sJAQPkB,EAAQlB,EAAAA,GAAAA,MAAH,+FAMLmB,GAAOnB,EAAAA,EAAAA,IAAOoB,EAAAA,IAAPpB,CAAH,+F,SCfF,SAASqB,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzC,OACE,UAACN,EAAD,YACE,SAACE,EAAD,KACA,SAACD,EAAD,CACEM,KAAK,OACLF,MAAOA,EACPC,SAAU,SAAAE,GAAC,OAAIF,EAASE,EAAEC,OAAOJ,MAAtB,MAIlB,C,+BCPc,SAASK,IAAU,IAAD,EAC/B,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAC3C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAO9B,EAAP,KAAe+B,EAAf,KA4BA,OArBAC,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAAL,CAIA,IAAMK,EAAW,mCAAG,8GAKKC,EAAAA,EAAAA,IAAeN,GALpB,OAKVO,EALU,OAMhBJ,EAAUI,EAAOC,SAND,gJAAH,qDAajBH,GAfC,CAgBF,GAAE,CAACL,KAGF,4BACE,SAACV,EAAD,CAAWC,MAAOS,EAAOR,SA5BT,SAAAQ,GAElBD,EAD6B,KAAVC,EAAe,CAAEA,MAAAA,GAAU,CAAC,EAEhD,KA0BG,SAAC7B,EAAA,EAAD,CAAWC,OAAQA,MAGxB,C,sLCvCKqC,E,MAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QALY,sCASHC,EAAiB,mCAAG,sGACRL,EAASR,IAAI,uBADL,uBACvBc,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKjBT,EAAc,mCAAG,WAAMN,GAAN,yFACLS,EAASR,IAAI,gBAAiB,CACnDW,OAAQ,CACNZ,MAAOA,KAHiB,uBACpBe,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,sDASdC,EAAY,mCAAG,WAAMvC,GAAN,yFACHgC,EAASR,IAAT,iBAAuBxB,IADpB,uBAClBsC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZE,EAAe,mCAAG,WAAMxC,GAAN,yFACNgC,EAASR,IAAT,iBAAuBxB,EAAvB,aADM,uBACrBsC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKG,MAFiB,2CAAH,sDAKfC,EAAe,mCAAG,WAAM1C,GAAN,yFACNgC,EAASR,IAAT,iBAAuBxB,EAAvB,aADM,uBACrBsC,EADqB,EACrBA,KADqB,kBAEtBA,EAAKP,SAFiB,2CAAH,qD","sources":["components/MovieList/MovieList.module.jsx","components/MovieList/MovieList.jsx","components/SearchBox/SearchBox.module.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","shared/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieWrapp = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const MovieItem = styled.li`\n  min-width: 140px;\n  width: 140px;\n  margin-top: 10px;\n  margin-bottom: 10px;\n  margin-right: 6px;\n  border: 1px solid rgba(227, 227, 227, 1);\n  padding-bottom: 10px;\n  border-radius: 5px;\n  overflow: hidden;\n  background-color: #fff;\n  text-align: center;\n\n  &:nth-child(8n) {\n    margin-right: 0;\n  }\n\n  & a {\n    text-decoration: none;\n    color: #032541;\n  }\n\n  & p {\n    font-weight: 600;\n  }\n\n  & img {\n    width: 138px;\n    height: 207px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport imgPlaceholder from 'images/img-placeholder.png';\nimport { MovieWrapp, MovieItem } from './MovieList.module';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n  const elements = movies.map(({ id, title, poster_path }) => (\n    <MovieItem key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : imgPlaceholder\n          }\n          alt={title}\n        />\n        <p>{title}</p>\n      </Link>\n    </MovieItem>\n  ));\n\n  return <MovieWrapp>{elements}</MovieWrapp>;\n};\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Wrapper, Input, Icon } from 'components/SearchBox/SearchBox.module';\n\nexport default function SearchBox({ value, onChange }) {\n  return (\n    <Wrapper>\n      <Icon />\n      <Input\n        type=\"text\"\n        value={value}\n        onChange={e => onChange(e.target.value)}\n      />\n    </Wrapper>\n  );\n}\n","import { MovieList } from 'components/MovieList/MovieList';\nimport SearchBox from 'components/SearchBox/SearchBox';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSearchMovie } from 'shared/api/Api';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const [movies, setMovies] = useState([]);\n\n  const updateQuery = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchMovies = async () => {\n      try {\n        //      setLoading(true);\n        //    setError(null);\n\n        const result = await getSearchMovie(query);\n        setMovies(result.results);\n      } catch (error) {\n        //     setError(error);\n      } finally {\n        //     setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [query]);\n\n  return (\n    <div>\n      <SearchBox value={query} onChange={updateQuery} />\n      <MovieList movies={movies} />\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["MovieWrapp","styled","MovieItem","MovieList","movies","location","useLocation","elements","map","id","title","poster_path","to","state","from","src","imgPlaceholder","alt","Wrapper","Input","Icon","HiSearch","SearchBox","value","onChange","type","e","target","Movies","useSearchParams","searchParams","setSearchParams","query","get","useState","setMovies","useEffect","fetchMovies","getSearchMovie","result","results","instance","axios","baseURL","params","api_key","getTrendingMovies","data","getMovieById","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}