{"version":3,"file":"static/js/684.d27fabee.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.module.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.module.jsx","pages/MovieDetails/MovieDetails.jsx","shared/api/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Container = styled.div`\n  height: 450px;\n  background-position: right -200px top;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-image: url(${props => props.backdrop_path});\n`;\n//https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/y2Ca1neKke2mGPMaHzlCNDVZqsK.jpg\n\nexport const Poster = styled.img`\n  width: 300px;\n`;\n\nexport const Description = styled.div`\n  padding-left: 30px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  background-image: linear-gradient(\n    to right,\n    rgba(220.5, 220.5, 220.5, 1) 150px,\n    rgba(220.5, 220.5, 220.5, 0.84) 100%\n  );\n`;\n\nexport const NavTab = styled.ul`\n  display: flex;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n  border: 1px solid #032541;\n  margin-right: 10px;\n\n  &.active {\n    color: white;\n    background-color: #032541;\n  }\n`;\n\nexport const WrapperDesc = styled.div`\n  margin-top: 30px;\n  margin-bottom: 10px;\n`;\n","import {\n  Container,\n  Description,\n  Poster,\n  Wrapper,\n  NavTab,\n  Link,\n  WrapperDesc,\n} from 'components/MovieCard/MovieCard.module';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport imgPlaceholder from 'images/img-placeholder.png';\n\nexport default function MovieCard({ movie }) {\n  const location = useLocation();\n  const from = location.state?.from ?? '/movies';\n\n  const {\n    poster_path,\n    title,\n    vote_average,\n    overview,\n    genres,\n    release_date,\n    backdrop_path,\n  } = movie;\n\n  const backdrop = `https://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${backdrop_path}`;\n  return (\n    <>\n      <Container backdrop_path={backdrop}>\n        <Wrapper>\n          <Poster\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                : imgPlaceholder\n            }\n          />\n          <Description>\n            <h1>{title}</h1>\n            <p>\n              <b>{release_date}</b>\n            </p>\n            <p>\n              User score :{' '}\n              <b>\n                {vote_average ? Math.round((vote_average * 100) / 10) : '...'}%\n              </b>\n            </p>\n            <h2>Overview</h2>\n            <p>{overview ? overview : '...'}</p>\n            <h2>Genres</h2>\n            <p>{genres ? genres.map(item => item.name).join(', ') : '...'}</p>\n          </Description>\n        </Wrapper>\n      </Container>\n      <WrapperDesc>\n        <NavTab>\n          <li>\n            <Link state={{ from }} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link state={{ from }} to=\"reiwers\">\n              Reiwers\n            </Link>\n          </li>\n        </NavTab>\n        <Outlet />\n      </WrapperDesc>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const GoBack = styled.button`\n  padding: 2px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  background-color: #fff;\n  color: black;\n  font-weight: 500;\n  border: 1px solid #032541;\n`;\n","import MovieCard from 'components/MovieCard/MovieCard';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieById } from 'shared/api/Api';\nimport { GoBack } from './MovieDetails.module';\n\nexport default function MovieDetails() {\n  const [movie, setMovie] = useState(0);\n  // const [error, setError] = useState(null);\n  // const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const from = location.state?.from ?? '/';\n  const navigate = useNavigate();\n\n  const goBack = () => navigate(from);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        //      setLoading(true);\n        //      setError(null);\n\n        const result = await getMovieById(movieId);\n        setMovie(result);\n      } catch (error) {\n        //    setError(error);\n      } finally {\n        //    setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <GoBack onClick={goBack}>‚Üê Back</GoBack>\n      {movie && <MovieCard movie={movie} />}\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '8aba4e3419a44727b7eb66f35fce4fa2';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: API_KEY,\n  },\n});\n\nexport const getTrendingMovies = async () => {\n  const { data } = await instance.get('/trending/movie/day');\n  return data;\n};\n\nexport const getSearchMovie = async query => {\n  const { data } = await instance.get('/search/movie', {\n    params: {\n      query: query,\n    },\n  });\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieCredits = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews`);\n  return data.results;\n};\n"],"names":["Container","styled","props","backdrop_path","Poster","Description","Wrapper","NavTab","Link","NavLink","WrapperDesc","MovieCard","movie","from","useLocation","state","poster_path","title","vote_average","overview","genres","release_date","backdrop","src","imgPlaceholder","Math","round","map","item","name","join","to","GoBack","MovieDetails","useState","setMovie","movieId","useParams","navigate","useNavigate","useEffect","fetchMovie","getMovieById","result","onClick","instance","axios","baseURL","params","api_key","getTrendingMovies","get","data","getSearchMovie","query","id","getMovieCredits","cast","getMovieReviews","results"],"sourceRoot":""}